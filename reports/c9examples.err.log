Traceback (most recent call last):
  File "/Users/dsmith4/anaconda3/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/dsmith4/anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/dsmith4/anaconda3/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/dsmith4/anaconda3/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/dsmith4/anaconda3/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/Users/dsmith4/anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/dsmith4/anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/dsmith4/anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
x = np.array([0.124649657678,0.287401145777,0.500798018091,0.743924626861,,1.0030501261,1.42778258788])
y = np.array([1.82861597118,2.11914520336,2.51767621869,2.98512420428,3.52077974806,4.34735560142])

tol = 0.01
diff = tol+1
newb = 0

sigmax = np.ones(np.shape(x))
sigmay = np.ones(np.shape(y))

while (diff>tol):
    sigma2 = [np.sqrt(q**2+(newb*r)**2) for q,r in zip(sigmay,sigmax)]
    oldb = newb
    alpha = np.sum([a/b**2 for a, b in zip(y, sigma2)])
    beta = np.sum([1/b**2 for b in sigma2])
    g1 = [a/b**2 for a, b in zip(x, sigma2)]
    gamma = np.sum(g1)
    delta = np.sum([a*b for a, b in zip(g1, y)])
    epsilon = np.sum([a**2/b**2 for a, b in zip(x, sigma2)])

    xi = gamma**2-beta*epsilon
    newb = (gamma*alpha-beta*delta)/xi
    diff = np.abs(newb-oldb)

b = newb
a = (gamma*delta-epsilon*alpha)/xi    
sb = np.sqrt(-beta/xi)
sa = np.sqrt(-epsilon/xi)
x_new = np.arange(0,2,.25)
y_new = b*x_new+a

plt.figure(figsize=(8,8))
plt.plot(x,y,'bs',label="Duncan Original Data")
plt.plot(x_new,y_new,"k:",label="Linear Fit")
plt.xlabel(r"1-$\cos{\theta}$")
plt.ylabel("1/E scattered (1/MeV)")
plt.title("Testing Compton Scattering Hypothesis")
plt.legend()
plt.show()

slp = b
icpt = a
E0=1/slp
Eg = 1/icpt
eslp = 3.51e-5
eicpt = 3.51e-5
eE0 = eslp*E0**2
eEg = eicpt*Eg**2
print("The best-fit slope is ({0:3.2f} +- {1:3.2f})x10^-3 1/keV".format(slp*1000,eslp*1000))
print("The best-fit y-intercept is ({0:4.3f} +- {1:4.3f})x10^-2 1/keV".format(icpt*100,eicpt*100))
print("The estimate of E0 is ({0:3.0f} +- {1:2.0f}) keV".format(E0,eE0))
print("The estimate of Egam is ({0:4.2f} +- {1:3.2f}) keV".format(Eg,eEg))
------------------

[0;36m  Cell [0;32mIn[6], line 1[0;36m[0m
[0;31m    x = np.array([0.124649657678,0.287401145777,0.500798018091,0.743924626861,,1.0030501261,1.42778258788])[0m
[0m                                                                              ^[0m
[0;31mSyntaxError[0m[0;31m:[0m invalid syntax

SyntaxError: invalid syntax (4205738485.py, line 1)

